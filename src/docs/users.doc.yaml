openapi: 3.1.0
info:
  title: Green Groceries API - Users
  description: Documentation of Green Groceries API for user management
  version: 1.0.0
paths:
  /api/users:
    post:
      summary: Crea un nuevo usuario
      tags:
        - User
      requestBody:
        required: true
        description: Datos para crear un nuevo usuario
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        201:
          description: Usuario creado con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Message201'
        400:
          description: Error por datos incompletos o incorrectos
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        500:
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
    get:
      summary: Obtiene todos los usuarios (opcionalmente filtrados por rol)
      tags:
        - User
      parameters:
        - name: role
          in: query
          description: Filtro por rol de usuario
          required: false
          schema:
            type: integer
      responses:
        200:
          description: Lista de usuarios obtenida exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Response200all'
        400:
          description: Error por datos incompletos o incorrectos
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        500:
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /api/users/{uid}:
    get:
      summary: Busca un usuario por ID
      tags:
        - User
      parameters:
        - name: uid
          in: path
          required: true
          description: ID del usuario
          schema:
            type: integer
      responses:
        200:
          description: Usuario encontrado con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error404'
        500:
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
    put:
      summary: Actualiza un usuario por ID
      tags:
        - User
      parameters:
        - name: uid
          in: path
          required: true
          description: ID del usuario
          schema:
            type: integer
      requestBody:
        required: true
        description: Datos para actualizar el usuario
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        200:
          description: Usuario actualizado con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Error por datos incompletos o incorrectos
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        404:
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error404'
        500:
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
    delete:
      summary: Elimina un usuario por ID
      tags:
        - User
      parameters:
        - name: uid
          in: path
          required: true
          description: ID del usuario
          schema:
            type: integer
      responses:
        200:
          description: Usuario eliminado con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Message200'
        404:
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error404'
        500:
          description: Error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          description: ID del usuario
        name:
          type: string
          description: Nombre del usuario
        email:
          type: string
          description: Email del usuario
        role:
          type: integer
          description: Rol del usuario
      required:
        - name
        - email
        - role
  responses:
    Message201:
      type: object
      properties:
        message:
          type: string
          example: Usuario creado con éxito
    Error400:
      type: object
      properties:
        statusCode:
          type: integer
          format: int64
          description: Codigo de estado correrspondiente a la solicitud al fracaso por problemas del cliente
        message:
          type: string
          description: Texto descriptivo con mensaje de error por parte del cliente
      example:
        statusCode: 400
        message: Incomplete data on mid
    Error404:
      type: object
      properties:
        statusCode:
          type: integer
          format: int64
          description: Codigo de estado correspondiente a la solicitud al fracaso por no encontrar el recurso
        message:
          type: string
          description: Texto descriptivo con mensaje de error por parte del cliente
      example:
        statusCode: 404
        message: User not found
    Error500:
      type: object
      properties:
        error:
          type: string
          example: Error en el servidor
    Response200all:
      type: array
      items:
        $ref: '#/components/schemas/User'
    Message200:
      type: object
      properties:
        message:
          type: string
          example: Usuario eliminado con éxito